{"version":3,"sources":["components/ErrorMessage.js","components/Spiral.js","components/InputForm.js","components/OutputTable.js","App.js","reportWebVitals.js","index.js"],"names":["ErrorMessage","errorMsg","id","Spiral","calculateTable","width","height","table","i","x","y","num","path","maxX","minX","maxY","minY","InputForm","setWidth","setHeight","setTable","useState","setErrorMsg","onSubmit","e","preventDefault","isNaN","setTimeout","length","className","htmlFor","type","name","value","onChange","target","OutputTable","map","t","tt","Math","random","toString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ffab6b8.chunk.js","sourcesContent":["const ErrorMessage = ({errorMsg}) => {\n  return (\n    <h3 id=\"errorMsg\">{errorMsg}\n    </h3>\n  )\n}\n\nexport default ErrorMessage\n","let Spiral = {\n  calculateTable: function(width,height){\n  \tlet table = [];\n\n    // turn table into matrix\n  \tfor(let i = 0; i < height; i++) table[i] = [];\n\n    // variables for moving through table with while loop\n  \tlet x = width-1; let y = height-1; let num = 1; let path = 'left';\n  \tlet maxX = width-1; let minX = 0; let maxY = height-2; let minY = 0;\n    // if the table is entirely one column\n  \tif (x <= minX) {path = 'up'; minX++;}\n\n  \twhile(num != width*height+1){\n\n      // set table value at current position to current while loop cycle\n  \t\ttable[y][x] = num;\n\n      // movement\n  \t\tswitch(path){\n  \t\t\tcase 'left':\n  \t\t\t\tx--;\n  \t\t\t\tif (x <= minX) {path = 'up'; minX++;}\n  \t\t\t\tbreak;\n  \t\t\tcase 'right':\n  \t\t\t\tx++;\n  \t\t\t\tif (x >= maxX) {path = 'down'; maxX--}\n  \t\t\t\tbreak;\n  \t\t\tcase 'up':\n  \t\t\t\ty--;\n  \t\t\t\tif (y <= minY) {path = 'right'; minY++}\n  \t\t\t\tbreak;\n  \t\t\tcase 'down':\n  \t\t\t\ty++;\n  \t\t\t\tif (y >= maxY) {path = 'left';maxY--}\n  \t\t\t\tbreak;\n  \t\t}\n\n  \t\tnum++;\n  \t}\n\n    return table;\n  },\n};\n\nexport default Spiral;\n","import ErrorMessage from \"./ErrorMessage\"\nimport Spiral from \"./Spiral\"\nimport { useState } from 'react'\n\nconst InputForm = ({ width, setWidth, height, setHeight, setTable }) => {\n  const [errorMsg, setErrorMsg] = useState([\"\"]);\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n\n    if(isNaN(width) || isNaN(height)){\n      setErrorMsg([\"Dimensions must be a number!\"]);\n      setTimeout(() => {setErrorMsg([\"\"])}, 10000);\n    }else if(width%1!=0 || height%1!=0){\n      setErrorMsg([\"Dimensions can't be decimal!\"]);\n      setTimeout(() => {setErrorMsg([\"\"])}, 10000);\n    }else if(width.length<=0 || height.length<=0){\n      setErrorMsg([\"Please enter in valid Dimensions!\"]);\n      setTimeout(() => {setErrorMsg([\"\"])}, 10000);\n    }else{\n      setErrorMsg([\"\"]);\n      setTable(Spiral.calculateTable(width,height))\n    }\n  }\n\n  return (\n    <div id='inputDiv'>\n      <form id=\"inputForm\" onSubmit={onSubmit}>\n        <h1>INPUT</h1>\n        <hr />\n        <div className=\"form-control\">\n          <label htmlFor=\"height\">Broj redaka</label>\n          <input id=\"height\" type=\"text\" name=\"height\" value={width} onChange={(e) => setWidth(e.target.value)} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"width\">Broj stupaca</label>\n          <input id=\"width\" type=\"text\" name=\"width\" value={height} onChange={(e) => setHeight(e.target.value)} />\n        </div>\n\n        <input id=\"submit\" type=\"submit\" name=\"submit\" value=\"KREIRAJ TABLICU\" />\n        <ErrorMessage errorMsg={errorMsg}></ErrorMessage>\n      </form>\n    </div>\n  )\n}\n\nexport default InputForm\n","import { useState, useEffect } from 'react'\n\nconst OutputTable = ({ table, setErrorMsg }) =>\n{\n  return (\n    <div id=\"tableContainer\">\n      <table>\n        <tbody>\n        {table.map((t) => (<tr key={Math.random().toString()}>{t.map((tt) => (<td  key={tt}>{tt}</td>))}</tr>))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nexport default OutputTable\n","import InputForm from \"./components/InputForm\"\nimport OutputTable from \"./components/OutputTable\"\nimport { useState, useEffect, useLayoutEffect } from 'react'\n\nfunction App() {\n  const [width, setWidth] = useState('5');\n  const [height, setHeight] = useState('5');\n  const [table, setTable] = useState([[9,10,11,12,13],[8,21,22,23,14],[7,20,25,24,15],[6,19,18,17,16],[5,4,3,2,1]]);\n\n  return (\n    <div id=\"main\" className=\"container\">\n      <header>\n        <h1>Cikliƒçna Tabela</h1>\n      </header>\n      <InputForm width={width} setWidth={setWidth} height={height} setHeight={setHeight} setTable={setTable}/>\n      <div id=\"output\">\n        <div id=\"outputHeader\">\n          <h1>OUTPUT</h1>\n          <hr />\n        </div>\n        <OutputTable table={table} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}